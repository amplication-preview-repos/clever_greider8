/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ChangeRequest as PrismaChangeRequest } from "@prisma/client";
import { ChangeRequestDto } from "../../approval/ChangeRequestDto";

export class ChangeRequestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ChangeRequestCountArgs, "select">
  ): Promise<number> {
    return this.prisma.changeRequest.count(args);
  }

  async changeRequests(
    args: Prisma.ChangeRequestFindManyArgs
  ): Promise<PrismaChangeRequest[]> {
    return this.prisma.changeRequest.findMany(args);
  }
  async changeRequest(
    args: Prisma.ChangeRequestFindUniqueArgs
  ): Promise<PrismaChangeRequest | null> {
    return this.prisma.changeRequest.findUnique(args);
  }
  async createChangeRequest(
    args: Prisma.ChangeRequestCreateArgs
  ): Promise<PrismaChangeRequest> {
    return this.prisma.changeRequest.create(args);
  }
  async updateChangeRequest(
    args: Prisma.ChangeRequestUpdateArgs
  ): Promise<PrismaChangeRequest> {
    return this.prisma.changeRequest.update(args);
  }
  async deleteChangeRequest(
    args: Prisma.ChangeRequestDeleteArgs
  ): Promise<PrismaChangeRequest> {
    return this.prisma.changeRequest.delete(args);
  }
  async ApproveChangeRequest(args: ChangeRequestDto): Promise<string> {
    throw new Error("Not implemented");
  }
}
